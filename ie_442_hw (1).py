# -*- coding: utf-8 -*-
"""IE 442 HW.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zbjBQOd4gCz2AnjdGFtgT-eIC1dSLCSk
"""

!pip install alpha_vantage

!pip install streamlit

from alpha_vantage.timeseries import TimeSeries
import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st

API_key = "AW25HH4Y84OJ93V6"

ts = TimeSeries(key=API_key, output_format="pandas")

data = ts.get_monthly_adjusted(symbol="MSFT")[0]
data = pd.DataFrame(data)
plt.plot(data.index, data["5. adjusted close"])

st.title("Stock Price App")
ticker = st.sidebar.text_input("Ticker")
start_date = st.sidebar.date_input("Start Date")
end_date = st.sidebar.date_input("End Date")

fig = plt.figure(figsize=(12, 6))
plt.plot(data.index, data["5. adjusted close"])
plt.xlabel("Date")
plt.ylabel("Price")
plt.title(f"{ticker} Stock Price")

st.pyplot(fig)

# Install necessary libraries (run these commands in your environment)
# !pip install alpha_vantage streamlit

from alpha_vantage.timeseries import TimeSeries
import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st

# Set your API key
API_KEY = "AW25HH4Y84OJ93V6"  # Replace with your API key

# Initialize Alpha Vantage API
ts = TimeSeries(key=API_KEY, output_format="pandas")

# Streamlit App
st.title("Stock Price Viewer ðŸ“ˆ")
st.sidebar.header("Stock Options")

# Sidebar Inputs
ticker = st.sidebar.text_input("Enter Stock Ticker Symbol", value="MSFT")
start_date = st.sidebar.date_input("Start Date", value=pd.Timestamp("2020-01-01"))
end_date = st.sidebar.date_input("End Date", value=pd.Timestamp("2023-01-01"))

# Fetch Data
if ticker:
    try:
        # Get the stock data
        data, meta_data = ts.get_daily_adjusted(symbol=ticker, outputsize="full")
        data.index = pd.to_datetime(data.index)  # Convert index to datetime

        # Filter data based on date range
        filtered_data = data.loc[start_date:end_date]

        if filtered_data.empty:
            st.warning("No data found for the selected date range.")
        else:
            st.success(f"Data retrieved for {ticker} from {start_date} to {end_date}.")

            # Plotting
            fig, ax = plt.subplots(figsize=(10, 6))
            ax.plot(filtered_data.index, filtered_data["5. adjusted close"], label="Adjusted Close Price")
            ax.set_title(f"{ticker} Stock Price")
            ax.set_xlabel("Date")
            ax.set_ylabel("Price (USD)")
            ax.legend()
            st.pyplot(fig)

            # Display Data Table
            if st.checkbox("Show Raw Data"):
                st.write(filtered_data)
    except Exception as e:
        st.error(f"An error occurred: {e}")
else:
    st.info("Please enter a stock ticker symbol to get started.")

